swagger: '2.0'
info:
  description: 'API v1 do corujao.io'
  version: '1.0.0'
  title: 'corujao.io V1 API'
  termsOfService: 'http://corujao.io/terms'
  contact:
    email: 'apiteam@corujao.io'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:5000'
basePath: '/v1'
schemes:
- 'http'

tags:
- name: 'genres'
  description: 'Operações com gêneros cinematográficos'
- name: 'artists'
  description: 'Operações com artistas / diretores'
- name: 'movies'
  description: 'Operations com filmes'

paths:
  /genres:
    get:
      tags:
      - 'genres'
      summary: 'Lista os gêneros cinematográficos'
      operationId: 'listGenres'
      produces:
      - 'application/json'
      parameters:
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/Size'
        - $ref: '#/parameters/Search'
      responses:
        200:
          description: 'Gêneros consultados com sucesso'
          schema:
            properties:
              records:
                type: array
                items:
                  $ref: '#/definitions/Genre'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    post:
      tags:
      - 'genres'
      summary: 'Cadastra um novo gênero cinematográfico'
      operationId: 'addGenre'
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'genre'
          required: true
          schema:
           $ref: '#/definitions/Genre'
      responses:
        200:
          description: 'Gênero criado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Genre'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    
  /genres/{genreId}:
    parameters:
      - name: 'genreId'
        in: path
        required: true
        type: integer
        format: int64
    get:
      tags:
      - 'genres'
      summary: 'Detalhe de gênero cinematográfico'
      operationId: 'getGenre'
      produces:
      - 'application/json'
      responses:
        200:
          description: 'Gênero consultado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Genre'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    put:
      tags:
      - 'genres'
      summary: 'Atualização de gênero cinematográfico'
      operationId: 'updateGenre'
      consumes:
      - 'application/json'  
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'genre'
          required: true
          schema:
           $ref: '#/definitions/Genre'
      responses:
        200:
          description: 'Gênero atualizado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Genre'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'

  /artists:
    get:
      tags:
      - 'artists'
      summary: 'Lista os artistas'
      operationId: 'listArtists'
      produces:
      - 'application/json'
      parameters:
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/Size'
        - $ref: '#/parameters/Search'
      responses:
        200:
          description: 'Artistas consultados com sucesso'
          schema:
            properties:
              records:
                type: array
                items:
                  $ref: '#/definitions/Artist'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    post:
      tags:
      - 'artists'
      summary: 'Cadastra um novo artista'
      operationId: 'addArtist'
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'artist'
          required: true
          schema:
           $ref: '#/definitions/Artist'
      responses:
        200:
          description: 'Artista criado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Artist'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    
  /artists/{artistId}:
    parameters:
      - name: 'artistId'
        in: path
        required: true
        type: integer
        format: int64
    get:
      tags:
      - 'artists'
      summary: 'Detalhe de artista'
      operationId: 'getArtist'
      produces:
      - 'application/json'
      responses:
        200:
          description: 'Artista consultado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Artist'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    put:
      tags:
      - 'artists'
      summary: 'Atualização de artista'
      operationId: 'updateArtist'
      consumes:
      - 'application/json'  
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'artist'
          required: true
          schema:
           $ref: '#/definitions/Artist'
      responses:
        200:
          description: 'Artista atualizado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Artist'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    
  /artists/{artistId}/filmography:
    parameters:
      - name: 'artistId'
        in: path
        required: true
        type: integer
        format: int64
    get:
      tags:
      - 'artists'
      summary: 'Filmografia'
      operationId: 'getArtistFilmography'
      produces:
      - 'application/json'
      responses:
        200:
          description: 'Filmografia consultada com sucesso'
          schema:
            properties:
              records:
                type: array
                items:
                  $ref: '#/definitions/Movie'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a consulta - server side'
          schema:
            $ref: '#/definitions/ResponseError'

  /movies:
    get:
      tags:
      - 'movies'
      summary: 'Lista os filmes cinematográficos'
      operationId: 'listMovies'
      produces:
      - 'application/json'
      parameters:
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/Size'
        - $ref: '#/parameters/Search'
      responses:
        200:
          description: 'Filmes consultados com sucesso'
          schema:
            properties:
              records:
                type: array
                items:
                  $ref: '#/definitions/Movie'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    post:
      tags:
      - 'movies'
      summary: 'Cadastra um novo filme'
      operationId: 'addMovie'
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'movie'
          required: true
          schema:
           $ref: '#/definitions/Movie'
      responses:
        200:
          description: 'Filme criado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Movie'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    
  /movies/{movieId}:
    parameters:
      - name: 'movieId'
        in: path
        required: true
        type: integer
        format: int64
    get:
      tags:
      - 'movies'
      summary: 'Detalhe de filme'
      operationId: 'getMovie'
      produces:
      - 'application/json'
      responses:
        200:
          description: 'Filme consultado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Movie'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a consulta - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    put:
      tags:
      - 'movies'
      summary: 'Atualização de filme'
      operationId: 'updateMovie'
      consumes:
      - 'application/json'  
      produces:
      - 'application/json'
      parameters:
        - in: body
          name: 'movie'
          required: true
          schema:
           $ref: '#/definitions/Movie'
      responses:
        200:
          description: 'Filme atualizado com sucesso'
          schema:
            properties:
              record:
                $ref: '#/definitions/Movie'
              meta:
                $ref: '#/definitions/ResponseMeta'
        400:
          description: 'Parâmetros invalidos - client side'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a criação - server side'
          schema:
            $ref: '#/definitions/ResponseError'
    delete:
      tags:
      - 'movies'
      summary: 'Remove um filme do catálogo'
      operationId: 'removeMovie'
      produces:
        - 'application/json'
      responses:
        204:
          description: 'Filme removido com sucesso'
        404:
          description: 'Filme não encontrado'
          schema:
            $ref: '#/definitions/ResponseError'
        500:
          description: 'Erro durante a deleção - server side'
          schema:
            $ref: '#/definitions/ResponseError'

definitions:
  ResponseError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      messages:
        type: array
        items:
          type: string

  ResponseMeta:
    type: object
    properties:
      version:
        type: string
      timestamp:
        type: string
        format: date-time
      hostname:
        type: string
      numberOfRecords:
        type: integer
        format: int32
      page:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
  
  Genre:
    type: object
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  
  Artist:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      dateOfBirth:
        type: string
        format: date
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  
  Movie:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      releaseYear:
        type: integer
        format: int32
      genres:
        type: array
        items:
          $ref: '#/definitions/Genre'
      director:
        $ref: '#/definitions/Artist'
      cast:
        type: array
        items:
          $ref: '#/definitions/Artist'
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  
parameters:
  Page:
    in: query
    name: 'page'
    description: 'Página da listagem a ser retornada'
    type: integer
    format: int32
    default: 1
    
  Size:
    in: query
    name: 'size'
    description: 'Tamanho da paginação a ser utilizada no request'
    type: integer
    format: int32
    default: 10

  Search:
    in: query
    name: 'search'
    description: 'Retorna itens cuja descrição se pareça com o valor informado'
    type: string
    required: false
  
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io